name:                katip
version:             0.1.0.0
synopsis:            A structured logging framework.
description:
  Katip is a structured logging framework with following design goals:

  * Logs are structured, meaning they can be individually tagged with
    key value data (JSON Objects).  This helps you add critical
    details to log messages before you need them so that when you do,
    they are available. Logs are also namespaced to help filter
    different subsystems.

  * Critical details for monitoring production systems such as host,
    PID, thread id, module and line location are automatically
    captured.

  * Can be easily extended (even at runtime) to output to multiple
    destinations at once (known as scribes). See @katip-elasticsearch@
    as an example.

  * Designed to be highly configurable. Can be adjusted both with
    verbosity, which dictates how much of the log structure should
    actually get logged, and severity. Each individual scribe can be
    configured to a different log severity. It is even possible to at
    runtime swap out and replace loggers, allowing for swapping in
    verbose debug logging at runtime if you want.

  A note on the name: Katip is Turkish for scribe.

  Be sure to look in the @examples@ directory for some examples of how
  do integrate Katip into your own stack.

license:             BSD3
license-file:        LICENSE
author:              Ozgun Ataman
maintainer:          ozgun.ataman@soostone.com
copyright:           Soostone Inc, 2015
category:            Data, Text, Logging
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:
  examples/example.hs
  examples/example_lens.hs
  bench/Main.hs
  test/Main.hs
  test/Katip/Tests.hs
  test/Katip/Tests/Scribes/Handle.hs

flag lib-Werror
  default: False
  manual: True

library
  exposed-modules:
    Katip
    Katip.Core
    Katip.Monadic
    Katip.Scribes.Handle

  -- other-modules:
  default-extensions:
    DeriveGeneric
    FlexibleContexts
    GeneralizedNewtypeDeriving
    MultiParamTypeClasses
    RankNTypes
    RecordWildCards
    TemplateHaskell
    OverloadedStrings

  build-depends: base >=4.5 && <5
               , aeson >=0.6 && <0.12
               , auto-update >= 0.1 && < 0.2
               , bytestring >= 0.9 && < 0.11
               , containers >=0.4 && <0.6
               , either >= 4 && < 4.5
               , exceptions >= 0.5 && < 0.9
               , hostname >=1.0 && <1.1
               , lens >= 4.4 && <4.14
               , lens-aeson < 1.1
               , old-locale >= 1.0 && < 1.1
               , string-conv >= 0.1 && < 0.2
               , template-haskell >= 2.8 && < 2.11
               , text >= 0.11 && <1.3
               , time >= 1 && < 1.6
               , time-locale-compat >= 0.1.0.1 && < 0.2
               , transformers >= 0.3 && < 0.5
               , transformers-compat
               , unix >= 2.5 && < 2.8
               , unordered-containers >= 0.2 && < 0.3
               , monad-control >= 1.0 && < 1.1
               , mtl
               , transformers-base
               , resourcet

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:        -Wall
  if flag(lib-Werror)
    ghc-options: -Werror

test-suite test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test
  default-language:    Haskell2010
  build-depends: base
               , katip
               , aeson
               , tasty >= 0.10.1.2
               , tasty-hunit
               , tasty-quickcheck
               , quickcheck-instances
               , template-haskell
               , text
               , time
               , temporary
               , directory
               , regex-tdfa-rc


benchmark bench
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: bench
  default-language:    Haskell2010
  ghc-options: -O2 -Wall
  if flag(lib-Werror)
    ghc-options: -Werror
  build-depends:
                 base
               , aeson
               , blaze-builder
               , katip
               , criterion >= 1.1.0.0
               , unix
               , text
               , time
               , transformers
               , deepseq
